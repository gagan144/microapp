# AWS CodeBuild Specification file
# This file specify instructions to build the image and
# push it to Amazon ECR repository
# Environment variables for building:
# - AWS_DEFAULT_REGION
# - AWS_ACCOUNT_ID
# - IMAGE_REPO_NAME
# - TASK_DEF_NAME

version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - echo Done! Successfully logged in to Amazon ECR.
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME
      - BRANCH_NAME=$(git branch --show-current)
      - GIT_COMMIT_HASH=$(git rev-parse --short HEAD)
      - APP_VERSION=$(./show_version.sh)
      - IMAGE_TAG=$APP_VERSION-$GIT_COMMIT_HASH
  build:
    commands:
      - echo Working on branch=\'$BRANCH_NAME\'\, git commit hash=\'$GIT_COMMIT_HASH\'\, and app version=\'$IMAGE_TAG\'
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -f Dockerfile -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
      - echo Done! Build completed on `date`.
#      - echo Running unit tests...
#      - docker run -it $REPOSITORY_URI:latest python test.py
  post_build:
    commands:
      - bash -c "if [ /"$CODEBUILD_BUILD_SUCCEEDING/" == /"0/" ]; then exit 1; fi"
      - echo Pushing the docker images to \'$REPOSITORY_URI\' ...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Done! Docker images successfully pushed to the repository.
      # Generate artifact (Used by AWS Pipeline deploy stage); name should be the name of the container specified in the task definition
      - echo Writing image definitions file...
      - printf '[{"name":"%s","imageUri":"%s"}]' $TASK_DEF_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo Completed! Build process completed on `date`.

artifacts:
    files: imagedefinitions.json